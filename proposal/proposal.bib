@phdthesis{clements2006portable,
  title={Portable and high-level access to the stack with Continuation Marks},
  author={Clements, J.},
  year={2006},
  school={Northeastern University Boston},
  annotate={Clements introduces the programming language feature continuation marks and motivates their use. He provides an operational semantics vis Ã¢ vis the Scheme interpreter and three concrete applications: an algebraic stepper and a language with security annotations specifically designed to elucidate the behavior of continuation marks in the presence of tail call optimization and demonstrate the feasibility of such optimizations in languages which rely on security annotations already such as C\# and Java.}
}

@article{hudak1992report,
  title={Report on the programming language Haskell: a non-strict, purely functional language version 1.2},
  author={Hudak, P. and Peyton Jones, S. and Wadler, P. and Boutel, B. and Fairbairn, J. and Fasel, J. and Guzm{\'a}n, M.M. and Hammond, K. and Hughes, J. and Johnsson, T. and others},
  journal={ACM SigPlan notices},
  volume={27},
  number={5},
  pages={1--164},
  year={1992},
  publisher={ACM},
}

@book{jones2003haskell,
  title={Haskell 98 language and libraries: the revised report},
  author={Jones, S.P.},
  year={2003},
  publisher={Cambridge Univ Pr},
  annotate={This report describes the lazy, purely functional language Haskell. It establishes the core language and libraries that the Haskell 98 standard encompasses as well as motivations for and modifications of certain definitions. The author documents the inception of Haskell as a unification of the many similar functional languages existent at the time. Our profit here is realized in the stated goal for Haskell to be a research tool in addition to the other roles it should fill.}
}

@article{liang2009modular,
  title={Modular Monadic Semantics},
  author={Liang, S. and Hudak, P.},
  year={2009},
  publisher={Citeseer},
  annotate={Liang, et al. motivate the use of monad for semantic specification by exposing the non-modularity of the commonly used denotational approach. They also discuss monad transformers and the effect of monads on semantics-directed compilation. Most important to this work, they discuss the composition of monads modeling many different features including tracing, assignment, lazy evaluation, continuations, and nondeterminism.}
}

@book{mac1998categories,
  title={Categories for the working mathematician},
  author={Mac Lane, S.},
  volume={5},
  year={1998},
  publisher={Springer verlag},
  annotate={Saunders Mac Lane is one of a duo who created (or discovered, if you prefer) category theory. The book is derived from lectures delivered by the author at the University of Chicago shortly after the field's inception. Chapter 6 on monads an algebra is particularly relevant to the material related here and applied by Moggi.}
}

@inproceedings{moggi1989computational,
  title={Computational lambda-calculus and monads},
  author={Moggi, E.},
  booktitle={Logic in Computer Science, 1989. LICS'89, Proceedings., Fourth Annual Symposium on},
  pages={14--23},
  year={1989},
  organization={IEEE},
  annotate={Moggi introduces an application of the category theoretic monad to computation modeling. He discusses the typical approaches to semantics definition and identifies some of their weaknesses. He offers monads as an alternative approach which is more expressible.}
}

@book{moggi1990abstract,
  title={An abstract view of programming languages},
  author={Moggi, E. and University of Edinburgh. Laboratory for Foundation of Computer Science},
  year={1990},
  publisher={University of Edinburgh, Department of Computer Science, Laboratory for Foundations of Computer Science}
}

@article{moggi1991notions,
  title={Notions of computation and monads},
  author={Moggi, E.},
  journal={Information and computation},
  volume={93},
  number={1},
  pages={55--92},
  year={1991},
  publisher={Elsevier},
  annotate={Moggi continues his exposition on the application of monads to semantics definition with examples for continuations, state, partiality, nondeterminism, etc. He then discusses approaches to reasoning about programming languages and programs in a fixed programming language. He introduces a simple language with a monadic interpretation and explores its semantics.}
}

@article{wadler1995monads,
  title={Monads for functional programming},
  author={Wadler, P.},
  journal={Advanced Functional Programming},
  pages={24--52},
  year={1995},
  publisher={Springer},
  annotate={Wadler motivates monads as a design pattern with the development of programs with exceptions, state, and output. He presents an extremely readable exposition of the complications of enhancing pure computation with effects, discusses the disadvantages of typical solutions, and demonstrates the ease with which monads achieve the enhancement. This is coupled with a healthy dose of of rigor to ensure the solutions presented are correct. He also discusses the application of monads to array transformers and parsers.}
}

@article{queinnec2003inverting,
  title={Inverting back the inversion of control or, continuations versus page-centric programming},
  author={Queinnec, C.},
  journal={ACM SIGPLAN Notices},
  volume={38},
  number={2},
  pages={57--64},
  year={2003},
  publisher={ACM},
  annotate={Queinnec investigates the consequences of describing a web server using a language with first-class continuations. He considers applications in which agents progress through a sequence of submissions and may backtrack or clone sessions at any time. He concludes that web applications should be written as a single program in direct style wherein the state and continuation are implicitly encoded. Interestingly, he also concludes that this is possible in languages with explicit, reified continuations and submits that web languages should offer them.}
}

@inproceedings{flanagan1993essence,
  title={The essence of compiling with continuations},
  author={Flanagan, C. and Sabry, A. and Duba, B.F. and Felleisen, M.},
  booktitle={ACM SIGPLAN Notices},
  volume={28},
  number={6},
  pages={237--247},
  year={1993},
  organization={ACM}
}

@article{landin1998generalization,
  title={A generalization of jumps and labels},
  author={Landin, P.J.},
  journal={Higher-Order and Symbolic Computation},
  volume={11},
  number={2},
  pages={125--143},
  year={1998},
  publisher={Springer}
}

@article{reynolds1993discoveries,
  title={The discoveries of continuations},
  author={Reynolds, J.C.},
  journal={Lisp and symbolic computation},
  volume={6},
  number={3},
  pages={233--247},
  year={1993},
  publisher={Springer}
}

